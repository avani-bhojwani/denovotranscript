{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/denovotranscript/master/nextflow_schema.json",
    "title": "nf-core/denovotranscript pipeline parameters",
    "description": "A pipeline for de novo transcriptome assembly of short reads from bulk RNA-seq",
    "type": "object",
    "$defs": {
        "workflow_options": {
            "title": "Partial run options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "qc_only": {
                    "type": "boolean",
                    "description": "Whether the pipeline should only perform quality control, and skip assembly and quantification."
                },
                "skip_assembly": {
                    "type": "boolean",
                    "description": "Whether the pipeline should skip assembly steps, and only perform quality control of reads and quantification. --transcript_fasta must be provided if True."
                }
            },
            "fa_icon": "fas fa-angle-double-right"
        },
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/denovotranscript/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "transcript_fasta": {
                    "type": "string",
                    "description": "Path to fasta file (not compressed) containing a transcriptome assembly. Only needed if `--skip_assembly` is `True`."
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "fastqc_fastp_options": {
            "title": "FastQC/fastp options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "adapter_fasta": {
                    "type": "string",
                    "description": "File in FASTA format containing possible adapters to remove. Accepted formats: *.{fasta,fna,fas,fa}"
                },
                "save_trimmed_fail": {
                    "type": "boolean",
                    "description": "Specify `true` to save files that failed to pass trimming thresholds ending in *.fail.fastq.gz"
                },
                "save_merged": {
                    "type": "boolean",
                    "description": "Specify true to save all merged reads to the a file ending in *.merged.fastq.gz"
                },
                "skip_fastp": {
                    "type": "boolean",
                    "description": "Skip the fastp process if `true`"
                },
                "skip_fastqc": {
                    "type": "boolean",
                    "description": "Skip FastQC processes if `true`"
                },
                "extra_fastp_args": {
                    "type": "string",
                    "description": "Extra arguements for fastp. For example, `--trim_front1 15 --trim_front2 15 --trim_tail1 5 --trim_tail2 5{:bash}`"
                }
            },
            "fa_icon": "fas fa-cut"
        },
        "sortmerna_options": {
            "title": "SortMeRNA options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "remove_ribo_rna": {
                    "type": "boolean",
                    "description": "Enable the removal of reads derived from ribosomal RNA using SortMeRNA."
                },
                "ribo_database_manifest": {
                    "type": "string",
                    "default": "${projectDir}/assets/rrna-db-defaults.txt",
                    "description": "Text file containing paths to fasta files (one per line) that will be used to create the database for SortMeRNA."
                },
                "save_non_ribo_reads": {
                    "type": "boolean",
                    "description": "If this option is specified, intermediate FastQ files containing non-rRNA reads will be saved in the results directory."
                }
            },
            "fa_icon": "fas fa-filter"
        },
        "assembly_options": {
            "title": "Assembly options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "assemblers": {
                    "type": "string",
                    "default": "trinity,rnaspades",
                    "description": "Assemblers to use. Possible options include `trinity`, `trinity_no_norm` (trinity without normalized reads), and `rnaspades`.",
                    "pattern": "^(trinity|trinity_no_norm|rnaspades)(,(trinity|trinity_no_norm|rnaspades))*$"
                },
                "extra_trinity_args": {
                    "type": "string",
                    "description": "Extra arguments to pass to Trinity command in addition to defaults. Applies to both trinity and trinity_no_norm."
                },
                "soft_filtered_transcripts": {
                    "type": "boolean",
                    "description": "Include hard filtered transcripts (in addition to medium filtered transcripts) from rnaSPAdes in the input to EvidentialGene tr2aacds."
                },
                "hard_filtered_transcripts": {
                    "type": "boolean",
                    "description": "Include soft filtered transcripts (in addition to the medium filtered transcripts) from rnaSPAdes in the input to EvidentialGene tr2aacds."
                },
                "ss": {
                    "type": "string",
                    "description": "Set strand-specific type for rnaSPAdes. Use `rf` when first read in pair corresponds to reverse gene strand (antisense data, e.g. obtained via dUTP protocol) and `fr` otherwise (forward).",
                    "help_text": "Note, that strand-specificity is not related and should not be confused with FR and RF orientation of paired reads. RNA-Seq paired-end reads typically have forward-reverse orientation (--> <--), which is assumed by default and no additional options are needed.",
                    "enum": ["rf", "fr"]
                },
                "extra_tr2aacds_args": {
                    "type": "string",
                    "description": "Extra arguments for tr2aacds.pl. For example, '-MINAA=20'"
                }
            },
            "fa_icon": "fas fa-puzzle-piece"
        },
        "busco_options": {
            "title": "BUSCO options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "busco_mode": {
                    "type": "string",
                    "default": "transcriptome",
                    "description": "The mode to run BUSCO in. One of genome, proteins, or transcriptome",
                    "enum": ["genome", "proteins", "transcriptome"]
                },
                "busco_lineage": {
                    "type": "string",
                    "default": "auto",
                    "description": "The BUSCO lineage to use, or `auto` to automatically select lineage"
                },
                "busco_lineages_path": {
                    "type": "string",
                    "description": "Path to local BUSCO lineages directory."
                },
                "busco_config": {
                    "type": "string",
                    "description": "Path to BUSCO config file."
                }
            },
            "fa_icon": "fas fa-chart-pie"
        },
        "rnaquast_options": {
            "title": "rnaQUAST options",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-ruler",
            "properties": {
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter can be used to provide a reference to rnaQUAST.",
                    "fa_icon": "far fa-file-code",
                    "hidden": false
                },
                "gtf": {
                    "type": "string",
                    "description": "File with gene coordinates in GTF/GFF format (needs information about parent relations). rnaQUAST authors recommend to use files downloaded from GENCODE or Ensembl."
                }
            }
        },
        "transrate_options": {
            "title": "TransRate options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "transrate_reference": {
                    "type": "string",
                    "description": "Path to FASTA file of reference set of proteins or transcripts from a related species"
                }
            },
            "fa_icon": "fas fa-align-center"
        },
        "salmon_options": {
            "title": "Salmon options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "lib_type": {
                    "type": "string",
                    "default": "A",
                    "description": "Override library type inferred based on strandedness defined in meta object. `A` for auto."
                }
            },
            "fa_icon": "fas fa-fish"
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details.",
                    "hidden": true
                },
                "igenomes_base": {
                    "type": "string",
                    "default": "s3://ngi-igenomes/igenomes/",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "description": "Directory / URL base for iGenomes references.",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/workflow_options"
        },
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/fastqc_fastp_options"
        },
        {
            "$ref": "#/$defs/sortmerna_options"
        },
        {
            "$ref": "#/$defs/assembly_options"
        },
        {
            "$ref": "#/$defs/busco_options"
        },
        {
            "$ref": "#/$defs/rnaquast_options"
        },
        {
            "$ref": "#/$defs/transrate_options"
        },
        {
            "$ref": "#/$defs/salmon_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        }
    ]
}
