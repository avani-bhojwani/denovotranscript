/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    if (!params.skip_fastqc) {
            withName: '.*:.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_RAW' {
                ext.args = '--quiet'
                ext.prefix = { "${meta.id}_raw" }
                publishDir = [
                    path: { "${params.outdir}/fastqc/raw" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }

            withName: '.*:.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_TRIM' {
                    ext.args = '--quiet'
                    ext.prefix = { "${meta.id}_trim" }
                    publishDir = [
                        path: { "${params.outdir}/fastqc/trim" },
                        mode: params.publish_dir_mode,
                        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                    ]
                }

            withName: 'FASTQC_FINAL' {
                ext.args = '--quiet'
                ext.prefix = { "${meta.id}_final" }
                publishDir = [
                    path: { "${params.outdir}/fastqc/final" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }

    withName: FASTP {
        ext.args = {[
            params.extra_fastp_args ? params.extra_fastp_args.split("\\s(?=--)") : ''
        ].flatten().unique(false).join(' ').trim() }
    }

    withName: 'SORTMERNA' {
        ext.args   = '--num_alignments 1 -v'
        publishDir = [
            [
                path: { "${params.outdir}/sortmerna" },
                mode: params.publish_dir_mode,
                pattern: "*.log"
            ],
            [
                path: { "${params.outdir}/sortmerna" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz",
                enabled: params.save_non_ribo_reads
            ]
        ]
    }

    withName: 'TRINITY' {
        ext.args = {[
            params.extra_trinity_args ? params.extra_trinity_args.split("\\s(?=--)") : ''
        ].flatten().unique(false).join(' ').trim() }
    }

    withName: 'TRINITY_NO_NORM' {
        ext.args = {[
            '--no_normalize_reads',
            params.extra_trinity_args ? params.extra_trinity_args.split("\\s(?=--)") : ''
        ].flatten().unique(false).join(' ').trim() }
        ext.prefix = { "${meta.id}_no_norm" }
    }

    withName: SPADES {
        ext.args = "--rna"
        publishDir = [
            path: { "${params.outdir}/rnaspades" },
            mode: params.publish_dir_mode,
            pattern: '*.{gz,log}'
        ]
    }

    withName: 'EVIGENE_TR2AACDS' {
        ext.args = {[
            params.extra_tr2aacds_args ? params.extra_tr2aacds_args.split("\\s(?=--)") : ''
        ].flatten().unique(false).join(' ').trim() }
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
